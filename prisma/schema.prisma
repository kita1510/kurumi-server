// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  name          String?         @unique
  email         String          @unique
  password      String
  Role          ROLE            @default(USER)
  posts         Post[]
  profile       Profile?
  comment       Comment[]
  following     Follow[]
  PostOnLiked   PostOnLiked[]
  PostOnLibrary PostOnLibrary[]
}

model Profile {
  id       Int      @id @default(autoincrement())
  bio      String?
  avatar   String   @default("")
  user     User     @relation(fields: [userId], references: [id])
  userId   Int      @unique
  follower Follow[]
}

model Follow {
  followerId Int
  users      User    @relation(fields: [followerId], references: [id])
  profileId  Int
  profiles   Profile @relation(fields: [profileId], references: [id])

  @@id([followerId, profileId])
}

model Post {
  id            Int                 @id @default(autoincrement())
  title         String              @db.VarChar(255)
  content       String?
  description   String?
  coverPage     String?
  published     Boolean             @default(false)
  liked         Int                 @default(0)
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
  author        User                @relation(fields: [authorId], references: [id])
  authorId      Int
  comment       Comment[]
  categories    CategoriesOnPosts[]
  PostOnLiked   PostOnLiked[]
  PostOnLibrary PostOnLibrary[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  authorId  Int
  postId    Int
  liked     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
}

model Category {
  id    Int                 @id @default(autoincrement())
  name  String
  posts CategoriesOnPosts[]

  @@unique([name])
}

model CategoriesOnPosts {
  postId     Int
  categoryId Int
  post       Post     @relation(fields: [postId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId])
}

model PostOnLiked {
  postId Int
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@id([postId, userId])
}

model PostOnLibrary {
  postId Int
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@id([postId, userId])
}

enum ROLE {
  USER
  ADMIN
}
