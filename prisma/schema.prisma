// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // relationMode = "prisma"
}

model User {
  id            Int             @id @default(autoincrement())
  name          String?         @unique
  email         String          @unique
  password      String
  Role          ROLE            @default(USER)
  posts         Post[]          @relation("Post")
  comment       Comment[]       @relation("CommentOfUser")
  following     Follow[]        @relation("FollowingUser")
  PostOnLiked   PostLiked[]
  PostOnLibrary PostInLibrary[]
}

model Follow {
  followerId Int
  users      User @relation("FollowingUser", fields: [followerId], references: [id])
  profileId  Int

  @@id([followerId, profileId])
}

model Post {
  id            Int                 @id @default(autoincrement())
  title         String              @db.VarChar(255)
  content       String?
  description   String?
  coverPage     String?
  published     Boolean             @default(false)
  liked         Int                 @default(0)
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
  author        User                @relation("Post", fields: [authorId], references: [id])
  authorId      Int
  comment       Comment[]
  categories    CategoriesOfPost[]
  PostOnLiked   PostLiked[]
  PostOnLibrary PostInLibrary[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  authorId  Int
  postId    Int
  liked     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation("CommentOfUser", fields: [authorId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
}

model Category {
  id    Int                 @id @default(autoincrement())
  name  String
  posts CategoriesOfPost[]

  @@unique([name])
}

model CategoriesOfPost {
  postId     Int
  categoryId Int
  post       Post     @relation(fields: [postId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId])
}

model PostLiked {
  postId Int
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@id([postId, userId])
}

model PostInLibrary {
  postId Int
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@id([postId, userId])
}

enum ROLE {
  USER
  ADMIN
}
